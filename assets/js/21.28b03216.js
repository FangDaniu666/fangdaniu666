(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{740:function(s,n,a){"use strict";a.r(n);var t=a(4),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("说明")]),s._v(" "),a("p",[s._v("工厂模式是一种创建型设计模式，它提供了一种创建对象的最佳方式，隐藏了对象的创建逻辑，使得客户端无需了解对象的创建过程，只需通过工厂来获取所需的对象。")])]),s._v(" "),a("p",[s._v("工厂模式主要包含三种角色：抽象工厂、具体工厂和产品。")]),s._v(" "),a("p",[s._v("抽象工厂：定义了一组用于创建产品的接口，每个接口对应一种产品。")]),s._v(" "),a("p",[s._v("具体工厂：实现了抽象工厂定义的接口，具体实现了产品的创建方法。")]),s._v(" "),a("p",[s._v("产品：定义了具体工厂创建的对象的接口。")]),s._v(" "),a("p",[s._v("下面是一个简单的工厂模式的代码示例：")]),s._v(" "),a("p",[s._v("抽象产品类：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public abstract class Product {\n    public abstract void use();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("具体产品类：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public class ConcreteProductA extends Product {\n    public void use() {\n        System.out.println("使用产品A");\n    }\n}\n\npublic class ConcreteProductB extends Product {\n    public void use() {\n        System.out.println("使用产品B");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("抽象工厂类：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public abstract class Factory {\n    public abstract Product createProduct();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("具体工厂类：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public class ConcreteFactoryA extends Factory {\n    public Product createProduct() {\n        return new ConcreteProductA();\n    }\n}\n\npublic class ConcreteFactoryB extends Factory {\n    public Product createProduct() {\n        return new ConcreteProductB();\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("客户端代码：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public class Client {\n    public static void main(String[] args) {\n        Factory factoryA = new ConcreteFactoryA();\n        Product productA = factoryA.createProduct();\n        productA.use(); // 输出：使用产品A\n\n        Factory factoryB = new ConcreteFactoryB();\n        Product productB = factoryB.createProduct();\n        productB.use(); // 输出：使用产品B\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("在这个示例中，抽象产品类定义了产品的接口，具体产品类实现了具体产品的功能，抽象工厂类定义了工厂的接口，具体工厂类实现了具体工厂的功能。客户端通过具体工厂类来创建具体产品类的对象，并使用产品对象的方法。")])])}),[],!1,null,null,null);n.default=e.exports}}]);