(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{736:function(t,s,e){"use strict";e.r(s);var a=e(4),n=Object(a.a)({},(function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[this._v("说明")]),this._v(" "),s("p",[this._v("设计模式是针对软件设计中常见问题所提出的解决方案，它是经过实践验证的最佳实践。\n设计模式可以帮助开发人员提高代码的可重用性、可维护性和可扩展性，从而提高软件的质量和开发效率。")])]),this._v(" "),s("p",[this._v("设计模式可以分为三类：创建型模式（Creational Patterns）、结构型模式（Structural Patterns）和行为型模式（Behavioral Patterns）。创建型模式包括单例模式、工厂模式、抽象工厂模式、建造者模式和原型模式；结构型模式包括适配器模式、桥接模式、组合模式、装饰模式、外观模式、享元模式和代理模式；行为型模式包括模板方法模式、命令模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式和状态模式。设计模式不是万能的，开发人员需要根据具体情况选择合适的模式。")])])}),[],!1,null,null,null);s.default=n.exports}}]);